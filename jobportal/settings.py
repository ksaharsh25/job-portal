"""
Django settings for jobportal project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-mb)uofsvi##&^s7j$ac*%)3q=b(2p4ns4zq8h0hpr!mnla5i6^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['www.pixiejob.com','pixiejob.com','http://pixiejob.com','application-LB-660013509.us-east-1.elb.amazonaws.com','54.172.29.251','127.0.0.1']

#AUTH_USER_MODEL = 'user.User'
AUTH_USER_MODEL = 'user.User'
# Application definition

INSTALLED_APPS = [
    'admin_menu',
    'smart_selects',
    'django.contrib.admin',
    'user.authconfig.CustomAuthConfig', #To change the Name To Groups
   # 'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'tabbed_admin',
    'Address',
    'jobs',
    'user',
    'dashboard',
    'imagefit',    
    'corsheaders',
    'import_export',
    'tinymce',
    'crispy_forms',
    # 'django_otp',
    # 'django_otp.plugins.otp_totp',
    # 'django_otp.plugins.otp_hotp',
    # 'django_otp.plugins.otp_static',
    # 'phone_login',
    'rest_framework',
    'rest_framework.authtoken',
    'multiselectfield',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'jobportal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'jobportal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES{

#     'default':{
    
#         'ENGINE':'django.db.backends.mysql',
#         "NAME":"job-portal",
#         'HOST':'job-portal-instance-1.csgre6ycw4v5.ap-south-1.rds.amazonaws.com',
#         'USER':'admin',
#         'PASSWORD':'A1j2i3t45s',
#         'PORT':'3306',
#     },
# }              I


# django smart select library
# https://django-smart-selects.readthedocs.io/en/latest/installation.html
USE_JQUERY = True  # to apply Jquery


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DATE_INPUT_FORMATS = ['%d-%m-%Y']


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

IMPORT_EXPORT_USE_TRANSACTIONS = True


STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media/")


STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


TABBED_ADMIN_USE_JQUERY_UI = True

TABBED_ADMIN_JQUERY_UI_CSS = 'static/css/my-custom-jquery-ui.css'
TABBED_ADMIN_JQUERY_UI_JS = 'static/js/my-custom-jquery-ui.js'

ADMIN_LOGO = './assets/images/logo.svg'


ADMIN_STYLE = {
    
    'background': 'white',
    'primary-color': 'black', # '#205280',
    'primary-text': 'white',  # '#d6d5d2',
    'secondary-color': '#2d8549',
    'secondary-text': 'white',
    'tertiary-color': 'grey',
    'tertiary-text': 'white',
    'breadcrumb-color': 'white',
    'breadcrumb-text': 'black',
    'focus-color': 'black',
    'focus-text': 'white',
    'primary-button': 'black',
    'primary-button-text': ' white',
    'secondary-button': '#999',
    'secondary-button-text': 'white',
    'link-color': 'black',
    'link-color-hover': 'black',
}

MENU_WEIGHT = {
    'Dashboard' : 0,
    'Auth' :   1,
    'Account': 2,
    'World':   3,
    'jobs':    4,    
}


REST_FRAMEWORK = {

    'DEFAULT_AUTHENTICATION_CLASSES': (

        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),

    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    )

}


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=15),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': False,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'mobile_number',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(days=2),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=4),
}

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework.authentication.BasicAuthentication',
#         'rest_framework.authentication.TokenAuthentication',
#     )
# }



# AUTHENTICATION_BACKENDS = [
#     'phone_login.backends.phone_backend.PhoneBackend',
#     'django.contrib.auth.backends.ModelBackend'
# ]


# PHONE_LOGIN_ATTEMPTS = 10
# PHONE_LOGIN_OTP_LENGTH = 6
# PHONE_LOGIN_OTP_HASH_ALGORITHM = 'sha256'
# PHONE_LOGIN_DEBUG = True  # will include otp in generate response, default is False.        


# SENDSMS_BACKEND = 'myapp.mysmsbackend.SmsBackend' #(defaults to 'sendsms.backends.console.SmsBackend')
# SENDSMS_FROM_NUMBER = "+918209175003" 
# SENDSMS_ACCOUNT_SID = 'ACXXXXXXXXXXXXXX'
# SENDSMS_AUTH_TOKEN = 'xxxxxxxx' 
